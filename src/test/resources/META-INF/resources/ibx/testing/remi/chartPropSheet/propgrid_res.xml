<?xml version="1.0" encoding="UTF-8"?>
<ibx-res-bundle name="propgrid_res.xml" loadContext="bundle">
	<strings>
		<string-bundle>
			<![CDATA[
			{
				"language":"ibx_default",
				"strings":
				{
				}
			}
		]]>
		</string-bundle>
	</strings>

	<styles>
		<style-sheet>
		<![CDATA[
		]]>
		</style-sheet>
	</styles>

	<markup>
		<markup-block>
		</markup-block>
	</markup>

	<scripts>
		<script-block>
		<![CDATA[
		
var arc_json = {
	"info": {
		"version": "1.1.0",
		"implements_api_version": 2.0,
		"author": "Three D Graphics",
		"copyright": "Three D Graphics Inc.",
		"url": "https://threedgraphics.com",
		"icons": {
			"medium": "icons/medium.png"
		}
	},
	
	"properties": {
		"type": "regular",
		"arc": {
			"start": 1.5708,
			"extent": 0.75,
			"padding": 0.2,
			"sortBy": "value",
			"sort": {
				"by": "value",
				"ascending": true
			},
			"border": {
				"width": 1,
				"color": "white"
			}
		},
		"axis": {
			"base": {
				"color": "black",
				"width": 1
			},
			"labels": {
				"format": "auto"
			},
			"ticks": {
				"color": "black",
				"width": 1,
				"labels": {
					"fontSize": "14px",
					"color": "black"
				}
			}
		},
		"valueLabel": {
			"fontFamily": "sans-serif",
			"fontSize": "auto",
			"color": "#333333",
			"fontWeight": "bold",
			"format": "auto"
		},
		"labels": {
			"text": {
				"color": "#333333",
				"font": "Verdana",
				"weight": "bold",
				"size": "14px"
			},
			"marker": {
				"type": "circle"
			}
		},
		"tooltip": {
			"enabled": true 
		}
	},
	
	"propertyAnnotations": {
		"type": "str",
		"arc": {
			"start": "number",
			"extent": "number",
			"padding": "number",
			"sortBy": "str",
			"sort": {
				"by": "str",
				"ascending": "bool"
			},
			"border": {
				"width": "number",
				"color": "color"
			}
		},
		"axis": {
			"base": {
				"color": "color",
				"width": "number"
			},
			"labels": {
				"format": "str"
			},
			"ticks": {
				"color": "color",
				"width": "number",
				"labels": {
					"fontSize": "str",
					"color": "color"
				}
			}
		},
		"valueLabel": {
			"fontFamily": "str",
			"fontSize": "str",
			"fontWeight": "str",
			"color": "color",
			"format": "str"
		},
		"labels": {
			"text": {
				"color": "color",
				"font": "str",
				"weight": "str",
				"size": "str"
			},
			"marker": {
				"type": "str"
			}
		},
		"tooltip": {
			"enabled": "bool"
		}
	}
}

function convert(json) {

	var properties = json.properties;
	var annotations = json.propertyAnnotations;
	var res = [];

	function addObject(annotations, properties, target) {
		for (var k in annotations) {
			if (annotations.hasOwnProperty(k)) {
				addOneProperty(k, annotations[k], properties[k], target);
			}
		}
	}

	function addOneProperty(k, v, propertyValue, target) {

		var newEntry = {
			"displayName": k,
			"displayValue": propertyValue,
			"nameTip": null,
			"valueTip": null,
			"name": k,
			"value": propertyValue,
			"expanded": true
		};

		if (typeof v === 'string') {
			if (v === 'str') {
				newEntry.dataType = 'string';
				newEntry.uiType = 'text';
			} else if (v === 'bool') {
				newEntry.displayValue = '';
				newEntry.dataType = 'bool';
				newEntry.uiType = 'checkbox';
			} else if (v === 'number') {
				newEntry.valueMin = 0;
				newEntry.valueMax = 100;
				newEntry.step = 1;
				newEntry.dataType = 'number';
				newEntry.uiType = 'spinner';
			} else if (v === 'color') {
				newEntry.displayValue = '';
				newEntry.dataType = 'color';
				newEntry.uiType = 'colorpicker';
				newEntry.expanded = false;
			}
		} else if (typeof v === 'object') {
			newEntry.displayValue = '';
			newEntry.value = '';
			newEntry.dataType = '';
			newEntry.uiType = "label";
			newEntry.props = [];
			addObject(v, propertyValue, newEntry.props);
		}
		target.push(newEntry);
	}

	addObject(json.propertyAnnotations, json.properties, res);

	return res;
}

var sampleProps = convert(arc_json);
			
			//# sourceURL=propgrid_res.xml
		]]>
		</script-block>
	</scripts>
</ibx-res-bundle>