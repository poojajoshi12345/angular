<?xml version="1.0" encoding="UTF-8"?>
<ibx-res-bundle name="test_res_bundle.xml" loadContext="bundle">
	<strings>
		<string-file src="./test_res_strings.txt" default="false"/>
		<string-bundle>
			<![CDATA[
			{
				"language":"ibx_default",
				"strings":
				{
				}
			}
		]]>
		</string-bundle>
	</strings>

	<styles>
		<style-file src="./test_res_styles.css"/>
		<style-sheet>
		<![CDATA[
			.ibx-data-grid
			{
				box-sizing:border-box;
			}
			.dgrid-header-col-bar, .dgrid-header-row-bar
			{
				padding:2px;
				background-color:#ccc;
				border:1px solid red;
			}
			.dgrid-grid
			{
				border:1px solid black;
				overflow:auto;
			}
			.dgrid-row
			{
				flex:0 0 auto;
			}
			.dgrid-cell
			{
				flex:1 0 auto;
				border-right:1px solid #ccc;
				border-bottom:1px solid #ccc;
			}
			.ibx-data-grid-heading
			{
				padding:3px;
				border:1px outset;
				box-sizing:border-box;
			}
			.ibx-data-grid-heading-splitter
			{
				min-width:0px;
				width:2px;
				background-color:transparent;
				box-sizing:border-box;
			}
			.ibx-data-grid-cell
			{
				box-sizing:border-box;
				border-right:1px solid #ccc;
				border-bottom:1px solid #ccc;
			}
			.ibx-data-grid-cell-padding
			{
			}
			.test-class
			{
				font-size:2em;
			}
		]]>
		</style-sheet>
	</styles>

	<markup>
		<markup-file src="./test_res_markup.xml"/>
		<markup-block>
		</markup-block>
	</markup>

	<scripts>
		<script-file src="./test_res_script.js"/>
		<script-file src="../../ibxtools/shared_resources/js/ibfs.js" loadContext="ibx"/>
		<script-block>
		<![CDATA[
			var testProps = 
			[
				{
					"displayName":"Background Color",
					"displayValue":"White",
					"name":"backgroundColor",
					"value":"white",
					"type":"string",
					"uiType":"colorPicker",
					"expanded":false,
				},
				{
					"displayName":"Border",
					"displayValue":"1px solid black",
					"name":"border",
					"value":"1px solid black",
					"type":"string",
					"uiType":"borderSelector",
					"expanded":false,
					"props":
					[
						{
							"displayName":"Left",
							"displayValue":"1px solid black",
							"name":"left",
							"value":"1px solid black",
							"type":"string",
							"uiType":"borderSelector",
							"expanded":false,
							"props":
							[
								{
									"displayName":"Width",
									"displayValue":"1px",
									"name":"width",
									"value":"1px",
									"type":"string",
									"uiType":"textField",
								},
								{
									"displayName":"Style",
									"displayValue":"Solid",
									"name":"style",
									"value":"solid",
									"type":"string",
									"uiType":"select",
									"values":
									{
										"solid":
										{
											"displayName":"Solid",
											"value":"solid",
										},
										"dashed":
										{
											"displayName":"Dashed",
											"value":"dashed",
										},
										"dotted":
										{
											"displayName":"Dotted",
											"value":"dotted",
										},
									},
								},
								{
									"displayName":"Color",
									"displayValue":"red",
									"name":"color",
									"value":"red",
									"type":"color",
									"uiType":"colorPicker",
								},
							]
						}
					]
				}
			];

			$.widget("ibi.ibxDataGrid", $.ibi.ibxGrid,
			{
				options:
				{
					colMap:[],
					
					/*frame stuff*/
					cols:"auto 1fr",
					rows:"auto 1fr",
					classes:
					{
						colHeaderBarClass:"dgrid-header-col-bar",
						colHeaderClass:"dgrid-header-col",
						colHeaderSplitterClass:"dgrid-header-col-splitter",
						rowHeaderBarClass:"dgrid-header-row-bar",
						rowHeaderClass:"dgrid-header-row",
						rowHeaderSplitterClass:"dgrid-header-row-splitter",
						gridClass:"dgrid-grid",
						gridRow:"dgrid-row",
						cellClass:"dgrid-cell",
					},
					gridOptions:
					{
						align:"stretch",
						justify:"start",
					}
				},
				_widgetClass:"ibx-data-grid",
				_create:function()
				{
					var options = this.options;
					var classes = options.classes;
					var colHeaderBar = this._colHeaderBar = $("<div>").ibxHBox().ibxAddClass(classes.colHeaderBarClass).data({ibxCol:"2", ibxRow:"1"});
					var rowHeaderBar = this._rowHeaderBar = $("<div>").ibxVBox().ibxAddClass(classes.rowHeaderBarClass).data({ibxCol:"1", ibxRow:"2"});
					var grid = this._grid = $("<div>").ibxVBox().ibxAddClass(classes.gridClass).data({ibxCol:"2", ibxRow:"2"});
					this.add([colHeaderBar[0], rowHeaderBar[0], grid[0]]);
					this._super();
				},
				_onSplitterResize:function(e, resizeInfo)
				{
					this.refresh();
				},
				_buildHeaders:function()
				{
					this._colHeaderBar.ibxWidget("remove");

				}
				_refresh:function()
				{
					var options = this.options;
					this._super();

					this._grid.ibxWidget("remove");
					for(var i = 0; i < options.rowCount; ++i)
					{
						var row = $("<div>").ibxHBox().ibxAddClass(options.classes.gridRow);
						for(var j = 0; j < options.colCount; ++j)
						{
							var cell = $("<div class='dgrid-cell'>").ibxLabel({text: sformat("Cell ({1}, {2})", i, j)});
							row.ibxWidget("add", cell);
						}
						this._grid.ibxWidget("add", row);
					}

					this._grid.ibxWidget("option", options.gridOptions);
				}
			});

					
			//# sourceURL=test_res_bundle.xml
		]]>
		</script-block>
	</scripts>
</ibx-res-bundle>